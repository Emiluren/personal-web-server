var _user$project$ChattApp$showMessage = function (str) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(str)
			]));
};
var _user$project$ChattApp$messageList = function (messages) {
	return A2(_elm_lang$core$List$map, _user$project$ChattApp$showMessage, messages);
};
var _user$project$ChattApp$Model = F3(
	function (a, b, c) {
		return {phxSocket: a, currentMessage: b, messages: c};
	});
var _user$project$ChattApp$ChatMessage = function (a) {
	return {body: a};
};
var _user$project$ChattApp$chatMessageDecoder = A2(
	_elm_lang$core$Json_Decode$object1,
	_user$project$ChattApp$ChatMessage,
	A2(_elm_lang$core$Json_Decode_ops[':='], 'body', _elm_lang$core$Json_Decode$string));
var _user$project$ChattApp$ReceiveChatMessage = function (a) {
	return {ctor: 'ReceiveChatMessage', _0: a};
};
var _user$project$ChattApp$SendMessage = {ctor: 'SendMessage'};
var _user$project$ChattApp$SetNewMessage = function (a) {
	return {ctor: 'SetNewMessage', _0: a};
};
var _user$project$ChattApp$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(
			_elm_lang$core$Basics_ops['++'],
			_user$project$ChattApp$messageList(model.messages),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$form,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Events$onSubmit(_user$project$ChattApp$SendMessage)
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$input,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Events$onInput(_user$project$ChattApp$SetNewMessage),
									_elm_lang$html$Html_Attributes$value(model.currentMessage)
								]),
							_elm_lang$core$Native_List.fromArray(
								[]))
						]))
				])));
};
var _user$project$ChattApp$PhoenixMsg = function (a) {
	return {ctor: 'PhoenixMsg', _0: a};
};
var _user$project$ChattApp$init = function () {
	var _p0 = A2(
		_fbonetti$elm_phoenix_socket$Phoenix_Socket$join,
		_fbonetti$elm_phoenix_socket$Phoenix_Channel$init('room:lobby'),
		A4(
			_fbonetti$elm_phoenix_socket$Phoenix_Socket$on,
			'new_msg',
			'room:lobby',
			_user$project$ChattApp$ReceiveChatMessage,
			_fbonetti$elm_phoenix_socket$Phoenix_Socket$init('ws://localhost:4000/socket/websocket')));
	var phxSocket = _p0._0;
	var phxCmd = _p0._1;
	return A2(
		_elm_lang$core$Platform_Cmd_ops['!'],
		{
			phxSocket: phxSocket,
			currentMessage: '',
			messages: _elm_lang$core$Native_List.fromArray(
				[])
		},
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_elm_lang$core$Platform_Cmd$map, _user$project$ChattApp$PhoenixMsg, phxCmd)
			]));
}();
var _user$project$ChattApp$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'PhoenixMsg':
				var _p2 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$update, _p1._0, model.phxSocket);
				var phxSocket = _p2._0;
				var phxCmd = _p2._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{phxSocket: phxSocket}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$ChattApp$PhoenixMsg, phxCmd)
				};
			case 'ReceiveChatMessage':
				var _p3 = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$ChattApp$chatMessageDecoder, _p1._0);
				if (_p3.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								messages: A2(_elm_lang$core$List_ops['::'], _p3._0.body, model.messages)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'SetNewMessage':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{currentMessage: _p1._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			default:
				var payload = _elm_lang$core$Json_Encode$object(
					_elm_lang$core$Native_List.fromArray(
						[
							{
							ctor: '_Tuple2',
							_0: 'body',
							_1: _elm_lang$core$Json_Encode$string(model.currentMessage)
						}
						]));
				var push = A2(
					_fbonetti$elm_phoenix_socket$Phoenix_Push$withPayload,
					payload,
					A2(_fbonetti$elm_phoenix_socket$Phoenix_Push$init, 'new_msg', 'room:lobby'));
				var _p4 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$push, push, model.phxSocket);
				var phxSocket = _p4._0;
				var phxCmd = _p4._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentMessage: '', phxSocket: phxSocket}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$ChattApp$PhoenixMsg, phxCmd)
				};
		}
	});
var _user$project$ChattApp$subscriptions = function (model) {
	return A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$listen, model.phxSocket, _user$project$ChattApp$PhoenixMsg);
};
var _user$project$ChattApp$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$ChattApp$init, update: _user$project$ChattApp$update, subscriptions: _user$project$ChattApp$subscriptions, view: _user$project$ChattApp$view})
};
